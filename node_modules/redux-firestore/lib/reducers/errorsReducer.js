"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread4 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _constants = require("../constants");

var _query = require("../utils/query");

var _reducers = require("../utils/reducers");

var CLEAR_ERRORS = _constants.actionTypes.CLEAR_ERRORS,
    CLEAR_ERROR = _constants.actionTypes.CLEAR_ERROR,
    LISTENER_ERROR = _constants.actionTypes.LISTENER_ERROR,
    ERROR = _constants.actionTypes.ERROR;

function errorsAllIds() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  var _ref = arguments.length > 1 ? arguments[1] : undefined,
      meta = _ref.meta,
      type = _ref.type;

  switch (type) {
    case LISTENER_ERROR:
    case ERROR:
      if (state.indexOf((0, _query.getQueryName)(meta)) !== -1) {
        return state;
      }

      return (0, _toConsumableArray2.default)(state).concat([(0, _query.getQueryName)(meta)]);

    case CLEAR_ERRORS:
      return [];

    case CLEAR_ERROR:
      return state.filter(function (lId) {
        return lId !== (0, _query.getQueryName)(meta);
      });

    default:
      return state;
  }
}

function errorsByQuery() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,
      meta = _ref2.meta,
      payload = _ref2.payload,
      type = _ref2.type;

  switch (type) {
    case ERROR:
    case LISTENER_ERROR:
      return (0, _objectSpread4.default)({}, state, (0, _defineProperty2.default)({}, (0, _query.getQueryName)(meta), payload));

    case CLEAR_ERROR:
      return (0, _objectSpread4.default)({}, state, (0, _defineProperty2.default)({}, (0, _query.getQueryName)(meta), null));

    default:
      return state;
  }
}

var errorsReducer = (0, _reducers.combineReducers)({
  byQuery: errorsByQuery,
  allIds: errorsAllIds
});
var _default = errorsReducer;
exports.default = _default;