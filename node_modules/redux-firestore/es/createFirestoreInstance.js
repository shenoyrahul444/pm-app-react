"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createFirestoreInstance;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _merge2 = _interopRequireDefault(require("lodash/fp/merge"));

var _reduce2 = _interopRequireDefault(require("lodash/reduce"));

var _actions = require("./actions");

var _actions2 = require("./utils/actions");

var _constants = require("./constants");

function createFirestoreInstance(firebase, configs, dispatch) {
  var defaultInternals = {
    listeners: {},
    config: (0, _objectSpread3.default)({
      defaultConfig: _constants.defaultConfig
    }, configs)
  };
  firebase._ = (0, _merge2.default)(defaultInternals, firebase._);
  var aliases = [{
    action: _actions.firestoreActions.deleteRef,
    name: 'delete'
  }, {
    action: _actions.firestoreActions.setListener,
    name: 'onSnapshot'
  }];
  var methods = (0, _actions2.mapWithFirebaseAndDispatch)(firebase, dispatch, _actions.firestoreActions, aliases);
  var methodsFromFirestore = (0, _reduce2.default)(_constants.methodsToAddFromFirestore, function (acc, methodName) {
    return firebase.firestore && typeof firebase.firestore()[methodName] === 'function' ? (0, _objectSpread3.default)({}, acc, (0, _defineProperty2.default)({}, methodName, firebase.firestore()[methodName].bind(firebase.firestore()))) : acc;
  }, {});
  return Object.assign(methodsFromFirestore, firebase.firestore, {
    _: firebase._
  }, configs.helpersNamespace ? (0, _defineProperty2.default)({}, configs.helpersNamespace, methods) : methods);
}